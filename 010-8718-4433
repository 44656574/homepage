# homepage

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>클러스터용인 경남아너스빌 - 분양정보</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Noto Sans KR', sans-serif;
            line-height: 1.6;
            color: #2c3e50;
            background: linear-gradient(135deg, #74b9ff 0%, #3498db 100%);
        }
        
        .container {
            max-width: 100%;
            margin: 0 auto;
            background: #f8f9fa;
            min-height: 100vh;
        }
        
        .header {
            background: linear-gradient(135deg, #1e3c72 0%, #3498db 100%);
            color: #fff;
            padding: 20px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            animation: float 20s ease-in-out infinite;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }
        
        .header h1 {
            font-size: 2.2rem;
            margin-bottom: 10px;
            position: relative;
            z-index: 1;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .header p {
            font-size: 1rem;
            opacity: 0.9;
            position: relative;
            z-index: 1;
        }
        
        .highlight-badge {
            background: linear-gradient(45deg, #f39c12, #f1c40f);
            color: #2c3e50;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: bold;
            margin: 10px 5px;
            display: inline-block;
            animation: pulse 2s infinite;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        .section {
            padding: 20px;
            margin: 20px 15px;
            background: #fff;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }
        
        .section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #3498db, #1e3c72);
        }
        
        .section h2 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.8rem;
            border-left: 4px solid #3498db;
            padding-left: 15px;
        }
        
        .chart-container {
            position: relative;
            height: 350px;
            margin: 20px 0;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 15px;
            padding: 20px;
            box-shadow: inset 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .contact-button-inline {
            background: linear-gradient(45deg, #3498db, #1e3c72);
            color: #fff;
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            margin: 15px auto;
            display: block;
            transition: all 0.3s ease;
            text-decoration: none;
            text-align: center;
            max-width: 300px;
            box-shadow: 0 4px 15px rgba(52,152,219,0.3);
        }
        
        .contact-button-inline:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(52,152,219,0.4);
            background: linear-gradient(45deg, #74b9ff, #3498db);
        }
        
        .image-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        
        .image-grid-simple {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }
        
        .image-card {
            background: #fff;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            position: relative;
            cursor: pointer;
        }
        
        .image-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
        }
        
        .image-card img {
            width: 100%;
            height: 250px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        
        .image-card:hover img {
            transform: scale(1.05);
        }
        
        .image-card-simple {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            background: #fff;
            cursor: pointer;
        }
        
        .image-card-simple:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .image-card-simple img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        
        .image-card-simple:hover img {
            transform: scale(1.03);
        }
        
        .image-card .caption {
            padding: 20px;
            font-weight: bold;
            color: #2c3e50;
            text-align: center;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }
        
        .premium-features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        
        .feature-card {
            background: linear-gradient(135deg, #74b9ff 0%, #3498db 100%);
            color: #fff;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            transition: all 0.3s ease;
            box-shadow: 0 8px 25px rgba(52,152,219,0.3);
        }
        
        .feature-card:hover {
            transform: translateY(-5px) rotateY(5deg);
            box-shadow: 0 15px 35px rgba(52,152,219,0.4);
            background: linear-gradient(135deg, #3498db, #1e3c72);
        }
        
        .feature-card h3 {
            margin-bottom: 15px;
            font-size: 1.4rem;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        
        .stat-box {
            background: linear-gradient(135deg, #f39c12 0%, #f1c40f 100%);
            color: #2c3e50;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 8px 25px rgba(243,156,18,0.3);
            transition: all 0.3s ease;
        }
        
        .stat-box:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(243,156,18,0.4);
            background: linear-gradient(135deg, #f1c40f, #f39c12);
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 8px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        
        .stat-label {
            font-size: 1rem;
            opacity: 0.9;
        }
        
        .contact-section {
            background: linear-gradient(135deg, #2c3e50 0%, #333 100%);
            color: #fff;
            padding: 40px 20px;
            text-align: center;
            margin-top: 40px;
        }
        
        .contact-button {
            background: linear-gradient(45deg, #3498db, #1e3c72);
            color: #fff;
            padding: 15px 30px;
            border: none;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            margin: 10px;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            box-shadow: 0 4px 15px rgba(52,152,219,0.3);
        }
        
        .contact-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(52,152,219,0.4);
            background: linear-gradient(45deg, #74b9ff, #3498db);
        }
        
        .main-image {
            width: 100%;
            max-width: 900px;
            margin: 20px auto;
            display: block;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
            transition: transform 0.3s ease;
            cursor: pointer;
        }
        
        .main-image:hover {
            transform: scale(1.02);
        }
        
        @media (max-width: 768px) {
            .header h1 {
                font-size: 1.8rem;
            }
            
            .section {
                margin: 15px 10px;
                padding: 15px;
            }
            
            .chart-container {
                height: 280px;
                padding: 15px;
            }
            
            .image-grid {
                grid-template-columns: 1fr;
            }
            
            .image-grid-simple {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            }
            
            .premium-features {
                grid-template-columns: 1fr;
            }
            
            .image-card img {
                height: 200px;
            }
        }
        
        .floating-action {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(45deg, #f39c12, #f1c40f);
            color: #2c3e50;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            box-shadow: 0 6px 20px rgba(243,156,18,0.4);
            animation: bounce 2s infinite;
            transition: all 0.3s ease;
        }
        
        .floating-action:hover {
            transform: scale(1.1);
            background: linear-gradient(45deg, #f1c40f, #f39c12);
        }
        
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }
        
        .loading-placeholder {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 200px;
            background: linear-gradient(90deg, #f8f9fa 25%, #e9ecef 50%, #f8f9fa 75%);
            background-size: 200% 100%;
            animation: loading 1.5s infinite;
            border-radius: 8px;
        }
        
        @keyframes loading {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }
        
        .fullscreen-image {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease;
        }
        
        .fullscreen-image.show {
            opacity: 1;
            pointer-events: auto;
        }
        
        .fullscreen-image img {
            max-width: 90%;
            max-height: 90%;
            object-fit: contain;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>클러스터용인 경남아너스빌</h1>
            <p>프리미엄 아파트 분양정보 💎 반도체 클러스터 특급 입지</p>
            <div class="highlight-badge">🏢 반도체 클러스터 10분거리</div>
            <div class="highlight-badge">📈 양지읍 승격 예정</div>
            <div class="highlight-badge">💎 프리미엄 6가지 특징</div>
        </header>

        <section class="section">
            <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682597/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0001_wil7uw.jpg" alt="클러스터용인 경남아너스빌 메인" class="main-image">
            <a href="tel:010-8718-4433" class="contact-button-inline" data-type="phone">조한나팀장 010-8718-4433</a>
        </section>

        <section class="section">
            <h2>📊 용인시 인구 및 세대수 증가 추이</h2>
            <div class="chart-container">
                <canvas id="populationChart"></canvas>
            </div>
            <p style="color: #2c3e50; text-align: center; margin-top: 10px; font-style: italic;">
                꾸준한 인구 증가로 안정적인 수요 기반 확보
            </p>
        </section>

        <section class="section">
            <h2>📍 입지환경 및 시행사</h2>
            <div class="image-grid">
                <div class="image-card">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682597/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0006_r0wd3o.jpg" alt="입지환경" loading="lazy">
                    <div class="caption">프리미엄 입지환경</div>
                </div>
                <div class="image-card">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682597/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0005_ciryqn.jpg" alt="시행사" loading="lazy">
                    <div class="caption">시행사</div>
                </div>
            </div>
            <a href="https://open.kakao.com/o/g0osupHh" class="contact-button-inline" data-type="kakao" target="_blank">💬 카카오톡 상담하기</a>
        </section>

        <section class="section">
            <h2>🏗️ 아파트 공급 현황</h2>
            <div class="chart-container">
                <canvas id="supplyChart"></canvas>
            </div>
            <p style="color: #2c3e50; text-align: center; margin-top: 10px; font-style: italic;">
                공급 대비 입주 물량으로 안정적인 시장 환경
            </p>
        </section>

        <section class="section">
            <h2>🚀 상품안내 및 사업안내</h2>
            <div class="image-grid-simple">
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682597/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0022_njti4i.jpg" alt="상품안내1" loading="lazy">
                </div>
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682597/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0007_zqaga8.jpg" alt="상품안내2" loading="lazy">
                </div>
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682597/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0008_eudpbh.jpg" alt="사업안내" loading="lazy">
                </div>
            </div>
            <a href="tel:010-8718-4433" class="contact-button-inline" data-type="phone">조한나팀장 010-8718-4433</a>
        </section>

        <section class="section">
            <h2>🌟 프리미엄 6가지 특징</h2>
            <div class="premium-features">
                <div class="feature-card">
                    <h3>🏭 반도체 클러스터</h3>
                    <p>10분대 접근성으로 고소득 직장인 수요 집중</p>
                </div>
                <div class="feature-card">
                    <h3>🚀 개발호재</h3>
                    <p>동용인IC, 세종~포천 고속도로 등 교통망 확충</p>
                </div>
                <div class="feature-card">
                    <h3>🏠 와이드 특화설계</h3>
                    <p>6.2M 와이드 설계, 3면 발코니 확장형</p>
                </div>
                <div class="feature-card">
                    <h3>📈 분양가 상승 불가피</h3>
                    <p>기본형건축비, 제로에너지 인증 등 원가 상승</p>
                </div>
                <div class="feature-card">
                    <h3>💹 기준금리 인하</h3>
                    <p>대출 부담 완화로 구매력 증가</p>
                </div>
                <div class="feature-card">
                    <h3>🏛️ 양지읍 승격</h3>
                    <p>2025년 7월 개청 예정으로 지역 위상 상승</p>
                </div>
            </div>
        </section>

        <section class="section">
            <h2>💰 지가상승률 및 분양가 전망</h2>
            <div class="chart-container">
                <canvas id="priceChart"></canvas>
            </div>
            <p style="color: #2c3e50; text-align: center; margin-top: 10px; font-style: italic;">
                용인시 지가상승률 1위, 지속적인 가치 상승 예상
            </p>
        </section>

        <section class="section">
            <h2>🏠 지역분석 및 특화설계</h2>
            <div class="image-grid">
                <div class="image-card">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682598/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0011_y3tuxi.jpg" alt="지역분석" loading="lazy">
                    <div class="caption">지역분석</div>
                </div>
                <div class="image-card">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682598/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0059_jqsfei.jpg" alt="특화설계" loading="lazy">
                    <div class="caption">특화설계</div>
                </div>
            </div>
            <a href="https://open.kakao.com/o/g0osupHh" class="contact-button-inline" data-type="kakao" target="_blank">💬 세대별 상담받기</a>
        </section>

        <section class="section">
            <h2>📋 상세 분양정보</h2>
            <div class="image-grid-simple">
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682598/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0023_zy2lge.jpg" alt="상세정보1" loading="lazy">
                </div>
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682598/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0021_p9hnne.jpg" alt="상세정보2" loading="lazy">
                </div>
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682598/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0024_we3lw6.jpg" alt="상세정보3" loading="lazy">
                </div>
                <div class="image-card-simple">
                    <img src="https://res.cloudinary.com/drpmdqef5/image/upload/f_auto,q_auto/v1752682598/250707_클러스터용인_경남아너스빌_PC상담브리핑북_고화질ver._-압축됨_1_-압축됨_page-0058_hjappw.jpg" alt="상세정보4" loading="lazy">
                </div>
            </div>
            <a href="tel:010-8718-4433" class="contact-button-inline" data-type="phone">조한나팀장 010-8718-4433</a>
        </section>

        <section class="section">
            <h2>📍 주요 정보</h2>
            <div class="stats-grid">
                <div class="stat-box">
                    <div class="stat-number">84㎡</div>
                    <div class="stat-label">A/B 타입</div>
                </div>
                <div class="stat-box">
                    <div class="stat-number">123㎡</div>
                    <div class="stat-label">프리미엄 타입</div>
                </div>
                <div class="stat-box">
                    <div class="stat-number">10분</div>
                    <div class="stat-label">반도체클러스터</div>
                </div>
                <div class="stat-box">
                    <div class="stat-number">73조</div>
                    <div class="stat-label">한전 전력공급</div>
                </div>
                <div class="stat-box">
                    <div class="stat-number">2025.07</div>
                    <div class="stat-label">양지읍 승격</div>
                </div>
                <div class="stat-box">
                    <div class="stat-number">1위</div>
                    <div class="stat-label">지가상승률</div>
                </div>
            </div>
        </section>

        <section class="contact-section">
            <h2 style="color: #fff; border: none; padding: 0;">📞 분양 상담 문의</h2>
            <p style="margin: 20px 0; font-size: 1.1rem;">전문 상담원이 자세한 분양정보를 안내해드립니다</p>
            <a href="tel:010-8718-4433" class="contact-button" data-type="phone">조한나팀장 010-8718-4433</a>
            <a href="https://open.kakao.com/o/g0osupHh" class="contact-button" data-type="kakao" target="_blank">💬 카톡상담</a>
            <div style="margin-top: 30px; font-size: 0.95rem; opacity: 0.9;">
                <p>🕒 상담시간: 평일 09:00 ~ 18:00</p>
                <p>📍 경기도 용인시 처인구 양지면</p>
                <p>✨ 프리미엄 반도체 클러스터 특급 입지</p>
            </div>
        </section>

        <button class="floating-action" onclick="window.scrollTo({top: 0, behavior: 'smooth'})" aria-label="페이지 맨 위로 이동">
            ⬆️
        </button>

        <div class="fullscreen-image" id="fullscreenImage">
            <img src="" alt="전체 화면 이미지">
        </div>
    </div>

    <script>
        let populationChart, supplyChart, priceChart;
        const chartAnimations = new Map();

        function easeInOutCubic(t) {
            return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;
        }

        function animateChart(chart, canvasId) {
            if (!chart) {
                console.error(`차트 애니메이션 실패: ${canvasId} 차트가 초기화되지 않음`);
                return;
            }
            const originalData = chart.data.datasets.map(dataset => ({
                data: [...dataset.data],
                backgroundColor: dataset.backgroundColor,
                borderColor: dataset.borderColor
            }));

            let startTime = null;
            let lastFrameTime = null;
            const animationDuration = 2400; // 2.4초
            const frameInterval = 1000 / 30; // 30fps

            function updateChart(timestamp) {
                if (!chartAnimations.get(canvasId)?.active) {
                    console.log(`애니메이션 중지됨: ${canvasId}`);
                    return;
                }

                if (startTime === null) startTime = timestamp;
                if (lastFrameTime === null) lastFrameTime = timestamp;

                const elapsedSinceLastFrame = timestamp - lastFrameTime;
                if (elapsedSinceLastFrame < frameInterval) {
                    requestAnimationFrame(updateChart);
                    return;
                }

                const elapsed = timestamp - startTime;
                lastFrameTime = timestamp;

                if (elapsed >= animationDuration) {
                    chart.data.datasets.forEach((dataset, datasetIndex) => {
                        dataset.data = [...originalData[datasetIndex].data];
                        dataset.backgroundColor = originalData[datasetIndex].backgroundColor;
                        dataset.borderColor = originalData[datasetIndex].borderColor;
                    });
                    chart.update({ duration: 0, lazy: true });
                    chartAnimations.set(canvasId, { active: false, completed: true, animationId: null });
                    console.log(`애니메이션 완료: ${canvasId}`);
                    return;
                }

                const progress = elapsed / animationDuration;
                chart.data.datasets.forEach((dataset, datasetIndex) => {
                    dataset.data.forEach((value, index) => {
                        const delay = index * 100;
                        let localProgress = Math.max(0, elapsed - delay) / animationDuration;
                        if (localProgress > 1) localProgress = 1;
                        const scale = easeInOutCubic(localProgress);
                        dataset.data[index] = originalData[datasetIndex].data[index] * scale;
                        dataset.backgroundColor = adjustOpacity(originalData[datasetIndex].backgroundColor, scale);
                        dataset.borderColor = adjustOpacity(originalData[datasetIndex].borderColor, scale);
                    });
                });

                chart.update({ duration: 0, lazy: true });
                chartAnimations.get(canvasId).animationId = requestAnimationFrame(updateChart);
            }

            function adjustOpacity(color, opacity) {
                if (typeof color !== 'string') return color;
                if (color.startsWith('rgba')) {
                    return color.replace(/rgba\((\d+), (\d+), (\d+), [\d.]+?\)/, `rgba($1, $2, $3, ${opacity})`);
                } else if (color.startsWith('#')) {
                    const r = parseInt(color.slice(1, 3), 16);
                    const g = parseInt(color.slice(3, 5), 16);
                    const b = parseInt(color.slice(5, 7), 16);
                    return `rgba(${r}, ${g}, ${b}, ${opacity})`;
                }
                return color;
            }

            chartAnimations.set(canvasId, { active: true, completed: false, animationId: null });
            console.log(`애니메이션 시작: ${canvasId}`);
            requestAnimationFrame(updateChart);
        }

        function createPopulationChart() {
            const ctx = document.getElementById('populationChart').getContext('2d');
            populationChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['2018', '2019', '2020', '2021', '2022', '2023', '2024'],
                    datasets: [{
                        label: '인구수 (만명)',
                        data: [105, 106.5, 108, 110, 112.5, 115, 118],
                        borderColor: '#3498db',
                        backgroundColor: 'rgba(52, 152, 219, 0.1)',
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: '#3498db',
                        pointBorderColor: '#1e3c72',
                        pointRadius: 6,
                        pointHoverRadius: 8,
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                usePointStyle: true,
                                padding: 20,
                                font: { size: 12, weight: 'bold' }
                            }
                        }
                    },
                    scales: {
                        y: { beginAtZero: true, grid: { color: 'rgba(0,0,0,0.1)' } },
                        x: { grid: { color: 'rgba(0,0,0,0.1)' } }
                    },
                    animation: { duration: 0 }
                }
            });
            console.log('인구 차트 초기화 완료');
            chartAnimations.set('populationChart', { active: false, completed: false, animationId: null });
        }

        function createSupplyChart() {
            const ctx = document.getElementById('supplyChart').getContext('2d');
            supplyChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028'],
                    datasets: [{
                        label: '공급',
                        data: [8500, 12000, 15000, 18000, 14000, 12000, 10000, 8000],
                        backgroundColor: 'rgba(52, 152, 219, 0.8)',
                        borderColor: '#3498db',
                        borderWidth: 2,
                        borderRadius: 4
                    }, {
                        label: '입주',
                        data: [7800, 11200, 14100, 16800, 13500, 11800, 9800, 7900],
                        backgroundColor: 'rgba(243, 156, 18, 0.8)',
                        borderColor: '#f39c12',
                        borderWidth: 2,
                        borderRadius: 4
                    }, {
                        label: '미분양',
                        data: [700, 800, 900, 1200, 500, 200, 200, 100],
                        backgroundColor: 'rgba(44, 62, 80, 0.8)',
                        borderColor: '#2c3e50',
                        borderWidth: 2,
                        borderRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                usePointStyle: true,
                                padding: 20,
                                font: { size: 12, weight: 'bold' }
                            }
                        }
                    },
                    scales: {
                        y: { beginAtZero: true, grid: { color: 'rgba(0,0,0,0.1)' } },
                        x: { grid: { display: false } }
                    },
                    animation: { duration: 0 }
                }
            });
            console.log('공급 차트 초기화 완료');
            chartAnimations.set('supplyChart', { active: false, completed: false, animationId: null });
        }

        function createPriceChart() {
            const ctx = document.getElementById('priceChart').getContext('2d');
            priceChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['2020', '2021', '2022', '2023', '2024', '2025'],
                    datasets: [{
                        label: '지가상승률 (%)',
                        data: [8.5, 12.3, 15.2, 18.7, 22.1, 25.4],
                        borderColor: '#f39c12',
                        backgroundColor: 'rgba(243, 156, 18, 0.1)',
                        tension: 0.4,
                        fill: true,
                        yAxisID: 'y',
                        pointBackgroundColor: '#f39c12',
                        pointBorderColor: '#f1c40f',
                        pointRadius: 6,
                        pointHoverRadius: 8,
                        borderWidth: 3
                    }, {
                        label: '분양가 (억원)',
                        data: [4.2, 4.8, 5.5, 6.2, 6.8, 7.3],
                        borderColor: '#3498db',
                        backgroundColor: 'rgba(52, 152, 219, 0.1)',
                        tension: 0.4,
                        fill: true,
                        yAxisID: 'y1',
                        pointBackgroundColor: '#3498db',
                        pointBorderColor: '#1e3c72',
                        pointRadius: 6,
                        pointHoverRadius: 8,
                        borderWidth: 3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: {
                                usePointStyle: true,
                                padding: 20,
                                font: { size: 12, weight: 'bold' }
                            }
                        }
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            beginAtZero: true,
                            grid: { color: 'rgba(0,0,0,0.1)' },
                            title: {
                                display: true,
                                text: '지가상승률 (%)',
                                color: '#f39c12',
                                font: { weight: 'bold' }
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            beginAtZero: true,
                            grid: { drawOnChartArea: false },
                            title: {
                                display: true,
                                text: '분양가 (억원)',
                                color: '#3498db',
                                font: { weight: 'bold' }
                            }
                        },
                        x: { grid: { color: 'rgba(0,0,0,0.1)' } }
                    },
                    animation: { duration: 0 }
                }
            });
            console.log('가격 차트 초기화 완료');
            chartAnimations.set('priceChart', { active: false, completed: false, animationId: null });
        }

        document.querySelectorAll('img').forEach(img => {
            img.addEventListener('error', function() {
                this.src = 'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 300"><rect width="400" height="300" fill="%23f8f9fa"/><text x="200" y="150" text-anchor="middle" fill="%23666" font-size="16" font-family="Arial">이미지 로딩 실패</text></svg>';
                console.error(`이미지 로딩 실패: ${this.src}`);
            });

            img.addEventListener('load', function() {
                this.style.opacity = '1';
                this.style.filter = 'none';
                this.style.transition = 'opacity 0.5s ease, filter 0.5s ease';
            });

            img.style.opacity = '0.7';
            img.style.filter = 'blur(2px)';
        });

        const fullscreenImage = document.getElementById('fullscreenImage');
        document.querySelectorAll('.main-image, .image-card img, .image-card-simple img').forEach(img => {
            img.addEventListener('click', function(e) {
                e.preventDefault();
                fullscreenImage.querySelector('img').src = this.src;
                fullscreenImage.classList.add('show');
                console.log('이미지 전체 화면 열림:', this.src);
            });
        });

        fullscreenImage.addEventListener('click', function(e) {
            if (e.target === this || e.target.tagName === 'IMG') {
                this.classList.remove('show');
                console.log('이미지 전체 화면 닫힘');
            }
        });

        document.querySelectorAll('.contact-button, .contact-button-inline').forEach(button => {
            button.addEventListener('click', function(e) {
                const type = this.getAttribute('data-type');
                if (type === 'phone' && !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                    e.preventDefault();
                    alert('📞 전화번호: 010-8718-4433\n\n모바일에서 터치하시면 바로 전화연결됩니다.\n데스크톱에서는 번호를 복사해서 사용해주세요.');
                    console.log('전화 버튼 클릭 - 데스크톱 알림 표시');
                } else if (type === 'kakao') {
                    console.log('카카오톡 버튼 클릭:', this.href);
                }
            });
        });

        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.section').forEach(section => {
            section.style.opacity = '0';
            section.style.transform = 'translateY(30px)';
            section.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
            observer.observe(section);
        });

        const chartObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                const chartCanvas = entry.target.querySelector('canvas');
                if (chartCanvas) {
                    const canvasId = chartCanvas.id;
                    const chart = Chart.getChart(chartCanvas);
                    if (entry.isIntersecting && chart) {
                        const animationState = chartAnimations.get(canvasId);
                        if (!animationState.completed && !animationState.active) {
                            chartAnimations.set(canvasId, { active: true, completed: false, animationId: null });
                            console.log(`차트 표시됨, 애니메이션 시작: ${canvasId}`);
                            if (canvasId === 'populationChart') animateChart(populationChart, canvasId);
                            else if (canvasId === 'supplyChart') animateChart(supplyChart, canvasId);
                            else if (canvasId === 'priceChart') animateChart(priceChart, canvasId);
                        }
                    } else if (chart) {
                        const animationState = chartAnimations.get(canvasId);
                        if (animationState.active) {
                            cancelAnimationFrame(animationState.animationId);
                            chartAnimations.set(canvasId, { active: false, completed: false, animationId: null });
                            console.log(`차트 숨김, 애니메이션 상태 리셋: ${canvasId}`);
                            chart.data.datasets.forEach((dataset, datasetIndex) => {
                                dataset.data = dataset.data.map(() => 0);
                                dataset.backgroundColor = adjustOpacity(dataset.backgroundColor, 0);
                                dataset.borderColor = adjustOpacity(dataset.borderColor, 0);
                            });
                            chart.update({ duration: 0, lazy: true });
                        }
                    }
                }
            });
        }, { threshold: 0.5 });

        document.querySelectorAll('.chart-container').forEach(container => {
            chartObserver.observe(container);
        });

        document.addEventListener('visibilitychange', function() {
            if (document.hidden) {
                chartAnimations.forEach((value, key) => {
                    if (value.animationId) {
                        cancelAnimationFrame(value.animationId);
                        chartAnimations.set(key, { active: false, completed: false, animationId: null });
                        console.log(`페이지 숨김 - 애니메이션 상태 리셋: ${key}`);
                        const chart = Chart.getChart(key);
                        if (chart) {
                            chart.data.datasets.forEach((dataset, datasetIndex) => {
                                dataset.data = dataset.data.map(() => 0);
                                dataset.backgroundColor = adjustOpacity(dataset.backgroundColor, 0);
                                dataset.borderColor = adjustOpacity(dataset.borderColor, 0);
                            });
                            chart.update({ duration: 0, lazy: true });
                        }
                    }
                });
            } else {
                console.log('페이지 표시 - 애니메이션 상태 확인');
                document.querySelectorAll('.chart-container').forEach(container => {
                    const chartCanvas = container.querySelector('canvas');
                    if (chartCanvas) {
                        const canvasId = chartCanvas.id;
                        const chart = Chart.getChart(canvasId);
                        const rect = container.getBoundingClientRect();
                        const isVisible = rect.top >= 0 && rect.bottom <= window.innerHeight;
                        if (isVisible && chart && !chartAnimations.get(canvasId).completed) {
                            chartAnimations.set(canvasId, { active: true, completed: false, animationId: null });
                            console.log(`페이지 표시 - 애니메이션 재시작: ${canvasId}`);
                            if (canvasId === 'populationChart') animateChart(populationChart, canvasId);
                            else if (canvasId === 'supplyChart') animateChart(supplyChart, canvasId);
                            else if (canvasId === 'priceChart') animateChart(priceChart, canvasId);
                        }
                    }
                });
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            if (typeof Chart === 'undefined') {
                console.error('Chart.js 로딩 실패. 대체 CDN을 확인하세요: https://unpkg.com/chart.js@3.9.1/dist/chart.min.js');
                return;
            }
            createPopulationChart();
            createSupplyChart();
            createPriceChart();
            console.log('모든 차트 초기화 완료');
        });

        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({ behavior: 'smooth', block: 'start' });
                    console.log('부드러운 스크롤:', this.getAttribute('href'));
                }
            });
        });

        console.log('🎉 클러스터용인 경남아너스빌 웹페이지가 성공적으로 로드되었습니다!');
    </script>
</body>
</html>
